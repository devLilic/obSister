"use strict";const r=require("electron");r.contextBridge.exposeInMainWorld("api",{onOBSStatus:e=>{r.ipcRenderer.on("obs-status",(n,o)=>e(o))},obsProfiles:{getAll:()=>r.ipcRenderer.invoke("obs:getProfiles"),set:e=>r.ipcRenderer.invoke("obs:setProfile",e)},stream:{start:e=>r.ipcRenderer.send("start-stream",e),stop:()=>r.ipcRenderer.send("stop-stream"),startSmart:(e,n)=>r.ipcRenderer.invoke("obs:startSmartStream",{key:e,mode:n})},onProfileChanged:e=>{r.ipcRenderer.on("obs-profile-changed",(n,o)=>e(o))},on:(e,n)=>{r.ipcRenderer.removeAllListeners(e),r.ipcRenderer.on(e,(o,...i)=>n(o,...i))},off:(e,n)=>r.ipcRenderer.removeListener(e,n),send:(e,...n)=>r.ipcRenderer.send(e,...n),invoke:(e,...n)=>r.ipcRenderer.invoke(e,...n),schedule:{get:()=>r.ipcRenderer.invoke("schedule:get"),save:e=>r.ipcRenderer.invoke("schedule:save",e)},config:{get:()=>r.ipcRenderer.invoke("config:get"),save:e=>r.ipcRenderer.invoke("config:save",e)},logs:{load:()=>r.ipcRenderer.invoke("logs:load"),clear:()=>r.ipcRenderer.invoke("logs:clear")},google:{syncSchedule:()=>r.ipcRenderer.invoke("google:syncSchedule"),testConnection:(e,n,o)=>r.ipcRenderer.invoke("google:testConnection",{sheetId:e,keyPath:n,tabName:o})}});
